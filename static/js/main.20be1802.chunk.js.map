{"version":3,"sources":["api/people.ts","components/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["findParent","arr","parentName","find","parent","name","getPeopleWithParents","fetch","then","response","json","people","map","person","_i","mother","motherName","father","fatherName","PersonRow","sex","born","died","slug","PeopleTable","className","PeoplePage","useState","setPeople","useEffect","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"wOAMMA,EAAa,SAACC,EAAyBC,GAC3C,OAAOD,EAAIE,MACT,SAACC,GAAD,OAA8BF,IAAeE,EAAOC,SACjD,IAQMC,EAAuB,WAClC,OALOC,MATL,qEAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAK1BF,MAAK,SAAAG,GAAM,OAAIA,EACbC,KAAI,SAACC,EAAQC,EAAIb,GAAb,mBAAC,eACDY,GADA,IAEHE,OAAQf,EAAWC,EAAKY,EAAOG,YAC/BC,OAAQjB,EAAWC,EAAKY,EAAOK,qB,OChB1BC,EAA6B,SAAC,GAAgB,IAAdR,EAAa,EAAbA,OAC3C,OACE,mCACGA,EAAOC,KAAI,gBACVP,EADU,EACVA,KAAMe,EADI,EACJA,IAAKC,EADD,EACCA,KAAMC,EADP,EACOA,KAAMN,EADb,EACaA,WAAYE,EADzB,EACyBA,WAAYK,EADrC,EACqCA,KADrC,OAGV,+BACE,6BAAKlB,IACL,6BAAKe,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKN,IACL,6BAAKE,MANEK,SCLJC,EAA+B,SAAC,GAAgB,IAAdb,EAAa,EAAbA,OAC7C,OACE,uBAAOc,UAAU,cAAjB,SACE,kCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,2CAEF,cAAC,EAAD,CAAWd,OAAQA,UCfde,EAAsB,WACjC,MAA4BC,mBAAmB,IAA/C,mBAAOhB,EAAP,KAAeiB,EAAf,KAMA,OAJAC,qBAAU,WACRvB,IAAuBE,KAAKoB,KAC3B,IAGD,qCACE,6CACA,cAAC,EAAD,CAAajB,OAAQA,QCWZmB,EApBI,WACjB,OACE,cAAC,IAAD,UACE,sBAAKL,UAAU,MAAf,UACE,gCACE,cAAC,IAAD,CAASM,GAAG,IAAZ,kBACA,cAAC,IAAD,CAASA,GAAG,UAAZ,uBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,4CACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,QAC1C,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,2DCfnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.20be1802.chunk.js","sourcesContent":["import { Person } from '../types/Person';\nimport { PersonFromServer } from '../types/PersonFromServer';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst findParent = (arr: PersonFromServer[], parentName: string) => {\n  return arr.find(\n    (parent: PersonFromServer) => parentName === parent.name,\n  ) || {};\n};\n\nexport const getPeople = (): Promise<PersonFromServer[]> => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n\nexport const getPeopleWithParents = (): Promise<Person[]> => {\n  return getPeople()\n    .then(people => people\n      .map((person, _i, arr) => ({\n        ...person,\n        mother: findParent(arr, person.motherName),\n        father: findParent(arr, person.fatherName),\n      })));\n};\n","import React from 'react';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonRow: React.FC<Props> = ({ people }) => {\n  return (\n    <>\n      {people.map(({\n        name, sex, born, died, motherName, fatherName, slug,\n      }) => (\n        <tr key={slug}>\n          <td>{name}</td>\n          <td>{sex}</td>\n          <td>{born}</td>\n          <td>{died}</td>\n          <td>{motherName}</td>\n          <td>{fatherName}</td>\n        </tr>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable\">\n      <tbody>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n        <PersonRow people={people} />\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeopleWithParents } from '../api/people';\nimport { Person } from '../types/Person';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\n\nexport const PeoplePage:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeopleWithParents().then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <h1>People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  HashRouter as Router, Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <NavLink to=\"/\">Home</NavLink>\n          <NavLink to=\"/people\">People</NavLink>\n        </nav>\n\n        <Routes>\n          <Route path=\"/\" element={<h1>Homepage</h1>} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"*\" element={<h1>Page not found</h1>} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}